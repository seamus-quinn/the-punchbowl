// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MatchContainer matches the snapshot if there are matches received from props 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <MatchContainer
    matches={
        Array [
            Object {
              "articles": Array [
                Object {
                  "description": "Holy cow this cheeseburger is the best thing I have eaten in the last 25 minutes",
                  "title": "Wow, much cheeseburger",
                },
              ],
              "keywords": Array [
                "cheeseburger",
                "cheeseburger",
                "cheeseburger",
              ],
            },
          ]
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="match"
>
          <div
                    className="border"
          />
          <Connect(Match)
                    match={
                              Object {
                                        "articles": Array [
                                          Object {
                                            "description": "Holy cow this cheeseburger is the best thing I have eaten in the last 25 minutes",
                                            "title": "Wow, much cheeseburger",
                                          },
                                        ],
                                        "keywords": Array [
                                          "cheeseburger",
                                          "cheeseburger",
                                          "cheeseburger",
                                        ],
                                      }
                    }
          />
          <div
                    className="border"
          />
</div>,
      ],
      "className": "match-container",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="border"
/>,
            <Connect(Match)
              match={
                            Object {
                                          "articles": Array [
                                            Object {
                                              "description": "Holy cow this cheeseburger is the best thing I have eaten in the last 25 minutes",
                                              "title": "Wow, much cheeseburger",
                                            },
                                          ],
                                          "keywords": Array [
                                            "cheeseburger",
                                            "cheeseburger",
                                            "cheeseburger",
                                          ],
                                        }
              }
/>,
            <div
              className="border"
/>,
          ],
          "className": "match",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "border",
            },
            "ref": null,
            "rendered": null,
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "match": Object {
                "articles": Array [
                  Object {
                    "description": "Holy cow this cheeseburger is the best thing I have eaten in the last 25 minutes",
                    "title": "Wow, much cheeseburger",
                  },
                ],
                "keywords": Array [
                  "cheeseburger",
                  "cheeseburger",
                  "cheeseburger",
                ],
              },
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "border",
            },
            "ref": null,
            "rendered": null,
            "type": "div",
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="match"
>
            <div
                        className="border"
            />
            <Connect(Match)
                        match={
                                    Object {
                                                "articles": Array [
                                                  Object {
                                                    "description": "Holy cow this cheeseburger is the best thing I have eaten in the last 25 minutes",
                                                    "title": "Wow, much cheeseburger",
                                                  },
                                                ],
                                                "keywords": Array [
                                                  "cheeseburger",
                                                  "cheeseburger",
                                                  "cheeseburger",
                                                ],
                                              }
                        }
            />
            <div
                        className="border"
            />
</div>,
        ],
        "className": "match-container",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="border"
/>,
              <Connect(Match)
                match={
                                Object {
                                                "articles": Array [
                                                  Object {
                                                    "description": "Holy cow this cheeseburger is the best thing I have eaten in the last 25 minutes",
                                                    "title": "Wow, much cheeseburger",
                                                  },
                                                ],
                                                "keywords": Array [
                                                  "cheeseburger",
                                                  "cheeseburger",
                                                  "cheeseburger",
                                                ],
                                              }
                }
/>,
              <div
                className="border"
/>,
            ],
            "className": "match",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "border",
              },
              "ref": null,
              "rendered": null,
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "match": Object {
                  "articles": Array [
                    Object {
                      "description": "Holy cow this cheeseburger is the best thing I have eaten in the last 25 minutes",
                      "title": "Wow, much cheeseburger",
                    },
                  ],
                  "keywords": Array [
                    "cheeseburger",
                    "cheeseburger",
                    "cheeseburger",
                  ],
                },
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "border",
              },
              "ref": null,
              "rendered": null,
              "type": "div",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`MatchContainer matches the snapshot if there are no matches recieved from props 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <MatchContainer
    matches={
        Object {
            "matches": Array [],
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "className": "match-container",
    },
    "ref": null,
    "rendered": null,
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "className": "match-container",
      },
      "ref": null,
      "rendered": null,
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
